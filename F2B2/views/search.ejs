<!DOCTYPE html>
<html lang="kr">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <!-- Plyr 라이브러리 CSS -->
    <link rel="stylesheet" href="https://cdn.plyr.io/3.6.8/plyr.css" />

    <!-- Plyr 라이브러리 JS -->
    <script src="https://cdn.plyr.io/3.6.8/plyr.js"></script>
    <title>FloB</title>
    <link rel="stylesheet" href="/css/reset.css" />
    <link rel="stylesheet" href="../css/header.css" />
    <link rel="stylesheet" href="../css/recentPage.css" />
    <link rel="stylesheet" href="../css/musicbar.css" />
    <link rel="stylesheet" href="../css/footer.css" />
    <link rel="icon" href="../img/파비콘.png" type="image/png" />
  </head>

  <body>
    <div class="main-board">
      <!-- 헤더 영역 -->
      <%-include('header.ejs')%>

      <!-- 메인기능 -->
      <div class="music-board">
        <!-- 메인기능 1 : 최신앨범 -->
        <div class="recent-album">
          <div class="recent-title">검색 결과</div>
          <!-- <a href="/album"> -->
          <div class="recent-album-detail">
            <ul class="recent-album-move"></ul>
          </div>
          <!-- </a> -->
        </div>
        <!-- 메인기능 2 : FloB차트 -->
      </div>
    </div>

    <!-- footer.ejs include -->
    <%-include('footer.ejs')%>

    <script>
      // =============================== 검색 기능
      async function searchAlbum() {
        var searchKeyword = document.querySelector(".main-search-input").value;
        window.location.href = `/search?searchKeyword=${encodeURIComponent(
          searchKeyword
        )}`;
      }

      // ==================== 검색 앨범 리스트

      (async function () {
        const queryString = window.location.search;
        const urlParams = new URLSearchParams(queryString);
        const searchKeyword = urlParams.get("searchKeyword");

        const res = await axios({
          method: "GET",

          url: `https://api.spotify.com/v1/search?q=${searchKeyword}&type=album,track,artist`,

          headers: {
            Authorization: `Bearer ${localStorage.getItem("access_token")}`,
          },
        });

        // console.log("res.data.albums:", res.data.albums);

        const ulElement = document.querySelector(".recent-album-move");

        res.data.albums.items.forEach((item) => {
          // li 요소 생성
          const liElement = document.createElement("li");
          liElement.classList.add("recent-album-move-li");

          // 내부 HTML 구성
          let albumUrl = item.href;
          let albumImgUrl = item.images[0].url; //앨범 이미지 url
          let albumName = item.name; //앨범 이름
          let albumArtist = item.artists[0].name; // 아티스트 이름
          let albumTrackNum = item.total_tracks; // 전체 트랙 수
          let albumReleaseDate = item.release_date; // 발매일

          const maxLength = 24;

          const summaryAlbumName =
            albumName.length > maxLength
              ? albumName.substring(0, maxLength - 3) + "..."
              : albumName;
          //<img src="${albumImgUrl}" alt="albun-img" width="120px" height="120px" />

          liElement.innerHTML = `
                            <div class="recent-album-img">
                                <img src="${albumImgUrl}" alt="albun-img" height="160px" />
                            </div>
                            <span class="recent-album-title" style="font-weight: bold;">${summaryAlbumName}</span>
                            <div class="recent-album-artist">${albumArtist}</div>
                            <div class="recent-album-releaseDate" style = "color: #9D9D9D;">${albumReleaseDate}</div>

                        `;
          // 데이터 속성 추가
          liElement.dataset.albumUrl = albumUrl;

          liElement.onclick = async function () {
            //각 앨범 클릭 했을 시 트랙들에 대한 정보 출력

            const trackInfo = await axios({
              method: "GET",
              url: `${this.dataset.albumUrl}/tracks`,
              headers: {
                Authorization: `Bearer ${localStorage.getItem("access_token")}`,
              },
            });

            console.log("트랙 데이터: ", trackInfo.data);
            for (var item of trackInfo.data.items) {
              console.log("트랙 No.", item.track_number);
              console.log("트랙 이름:", item.name);
            }
          };

          // ul 요소에 li 요소를 추가
          ulElement.appendChild(liElement);
        });
      })();

      (async function () {
        if (localStorage.getItem("token")) {
          const res = await axios({
            method: "GET",
            url: "api/user/username",
            headers: {
              Authorization: `Bearer ${localStorage.getItem("token")}`,
            },
          });

          document.querySelector("#navLoginButton").textContent = "로그아웃";
          document.querySelector("#sideLoginButton").textContent = "로그아웃";

          // document.querySelector(
          //   "#navSignupButton"
          // ).textContent = `${res.data.result.user_id}님 \r\n환영합니다.`;
          document.querySelector(
            "#navSignupButton"
          ).innerHTML = `${res.data.result.user_id}님 <br> 환영합니다.`;

          document.querySelector(
            "#navSignupButton"
          ).innerHTML = `<div style = "text-align : right; font-size:24px;" >${res.data.result.user_id}님 <br> 환영합니다.</div>`;
          document.querySelector(
            "#sideSignupButton"
          ).innerHTML = `<div style = "text-align : right; font-size:20px;" >${res.data.result.user_id}님 <br> 환영합니다.</div>`;
        }
      })();

      ////////////////////////////////////////////////////////////

      $("#navSignupButton").click(function (event) {
        if (localStorage.getItem("token")) {
          event.preventDefault();
        }
      });

      $("#sideSignupButton").click(function (event) {
        if (localStorage.getItem("token")) {
          event.preventDefault();
        }
      });

      function loginButtonClick() {
        if (localStorage.getItem("token")) {
          //로그인 되어있으면
          alert("로그아웃 되었습니다");
          localStorage.removeItem("token");
          document.location.href = "/";
        } else {
          document.location.href = "/login";
        }
      }
      $("#navLoginButton").click(function (event) {
        event.preventDefault();
        loginButtonClick();
      });

      $("#sideLoginButton").click(function (event) {
        event.preventDefault();
        loginButtonClick();
      });
      ////////////////////////////////////////////////////////////
      function myPageButtonClick() {
        if (localStorage.getItem("token")) {
          //로그인 되어있으면
          document.location.href = "/myPage";
        } else {
          alert("로그인을 해야 이용할 수 있습니다.");
          document.location.href = "/login";
        }
      }
      $("#navmyPageButton").click(function (event) {
        event.preventDefault();

        myPageButtonClick();
      });
      $("#sidemyPageButton").click(function (event) {
        event.preventDefault();

        myPageButtonClick();
      });

      const chartTr = document.querySelectorAll(".flobchart tr");

      for (chart of chartTr) {
        chart.addEventListener("mouseover", (e) => {
          e.currentTarget.style.height = "100px";
        });

        chart.addEventListener("mouseout", (e) => {
          e.currentTarget.style.height = "50px";
        });
      }
      for (let i = 1; i < 11; i++) {
        let img_tr = document.querySelector(`#img_tr${i}`);
        img_tr.addEventListener("mouseover", async function () {
          const res = await axios({
            method: "POST",
            url: "/api/music/findMusic",
            data: {
              music_name: img_tr.children[2].textContent,
            },
          });
          const { album_img } = res.data.result;
          img_tr.children[1].innerHTML = `<img src="../album_img/all/${album_img}" style = "width:80px; height:70px">`;
        });
        img_tr.addEventListener("mouseout", async function () {
          img_tr.children[1].innerHTML = "";
          img_tr.children[1].innerHTML = '<i class="fa-solid fa-minus"></i>';
        });
      }
    </script>

    <script
      src="https://kit.fontawesome.com/ff4f9619d6.js"
      crossorigin="anonymous"
    ></script>
  </body>
</html>

<script>
  // 에러처리 함수
  function errorFunc(error) {
    if (error.response.data) {
      const { success } = error.response.data;
      if (success === false) {
        alert("로그인을해야 음악을 추가할 수 있습니다.");
      }
    }
  }
</script>
